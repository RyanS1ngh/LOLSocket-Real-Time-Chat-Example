let URL="wss://ws1.lolsocket.com";function createConnection(e,n){let t=new WebSocket(`${URL}/${e}/${n}`);return t.onopen=()=>{console.log("Successfully connected to the LOLSocket")},t.onclose=e=>{console.log(`Error Code: ${e.code} - ${e.reason} - LOLSocket connection closed`)},t}function automaticReconnect(e,n,t){new WebSocket(`${URL}/${e}/${n}`).onclose=()=>{console.log("Connection closed"),createConnection(e,n),t()}}function subscribeChannel(e,n){return e.onopen=()=>{setTimeout((()=>{e.send(JSON.stringify({event:"subscribe",channel:n}))}),1e3)},{echo:(t,o)=>{e.onmessage=e=>{const s=JSON.parse(e.data.toString());s.channel===n&&s.namespace===t&&(storeMessage(n,s),o(s.data))}},history:e=>{getMessageHistory(n,e)},error:n=>{e.onerror=e=>{n(e)}}}}function unsubscribeChannel(e,n){e.send(JSON.stringify({event:"unsubscribe",channel:n}))}const messageHistory={};function storeMessage(e,n){messageHistory[e]||(messageHistory[e]=[]),messageHistory[e].push(n)}function getMessageHistory(e,n){messageHistory[e]&&n(messageHistory[e])}function publishEvent(e,n,t,o){if(!n.startsWith("client-"))throw new Error('Client channels must start with "client-" prefix.');e.send(JSON.stringify({event:"publish",channel:n,namespace:t,data:o}))}function triggerEvent(e,n,t){const o={event:n,data:t};1===e.readyState?e.send(JSON.stringify(o)):e.onopen=()=>{e.send(JSON.stringify(o))}}function handleEvent(e,n,t){e.onmessage=e=>{const o=JSON.parse(e.data.toString());o.event===n&&t(o.data)}}function handleUID(e,n){e.addEventListener("message",(e=>{const t=JSON.parse(e.data.toString());"uid"===t.event&&n(t.uid)}))}function handleConnectionError(e){e.onerror=e=>{console.error("WebSocket error:",e.message)}}function LOLSocket(e,n){return this.apiKey=e,this.apiSecret=n,this.websocket=createConnection(e,n),automaticReconnect(e,n,(()=>{console.log("Reconnected to LOLSocket")})),handleConnectionError(this.websocket),{channel:e=>subscribeChannel(this.websocket,e),unbind:e=>unsubscribeChannel(this.websocket,e),publish:(e,n,t)=>publishEvent(this.websocket,e,n,t),trigger:(e,n)=>triggerEvent(this.websocket,e,n),on:(e,n)=>handleEvent(this.websocket,e,n),uid:e=>handleUID(this.websocket,e)}}